.NH
.XN "Images can be compressed
.PP
Compression is an important tool in computer scinence,
it allows economic use of storage and network bandwidth.
Here,
we discuss the topic of image encoding and image compression.
.NH 2
.XN "Image Encoding"
.PP
To encode an image,
we must take the discrete representation of the image,
and transform it into a set of symbols,
organized according to some data structure.
When encoding,
we try to use the fewest amount of storage.
Therefore,
encoding is related to compression.
.SH
Matrix Encoding
.PP
one way to encode an image,
is to use the matrix representation discussed earlier.
In such encoding,
we store the color information of each pixel,
and information about the image,
such as color depth, geometric resolution and resolution density.
.SH
Run-Length Encoding
.PP
Run-Length Encoding is a encoding technique that can be used to reduce the amount of redundent information is a given file.
It encodes repeated sequential data as lengths of intervals.
For example,
the line "aaaabbbb" will be encoded as "4a4b".
Run-Length Encoding can be a good compression technique given that the data has a lot of redundency in it.
.PP
In images,
and for regions of low freqencies (i.e. the color doesn't change too rapidly for small changes in the domain),
there can be redundency in the image's scanlines.
Therefore,
using run-length encoding help reduce the amount of storage needed for the image.
.SH
Entropy Encoding
.PP
To determine with encoding scheme is best in a certian situation,
a method is needed in order to compare how well each encoding scheme reduces the amount of storage needed to encode the message.
A branch of computer science,
called information theory,
studies this problem.
.[
main
.]
.PP
In order to encode a message (or an image),
An alphabet is needed.
Each alphabet element has a certian probability of occuring in the message.
In information theory,
we define a quantity called
.I "information"
for each letter.
It measures the amount of information a certian element of the alphabet carries,
which is defined as follows
.EQ
I({f sub k}) = - log ({p sub k})
.EN
where $p sub k$ is the probability of the kth element in the alphabet.

Information is inversely propotional to probability.
An alphabet element that occurs more often,
has a higher probability of occuring,
and carries fewer information.
However,
an element that occurs less frequently,
has a lower probability and carries more information.
However,
an element that occurs less frequently,
has a lower probability and carries more information.
.PP
To determine the amount of information carried in a message,
we sum the amount of information carried every alphabet element.
The
.I "entropy"
of a message is defined as
.EQ
E = - sum from { i = 0 } to { L - 1 } { {p sub k} log ({p sub k}) }
.EN
where $L$ is the number of symbols in the alphabet.
.PP
Given a message,
we encode it by associating each alphabet element with a
.I "codeword" ,
which is a binary string.
The number of bits used in encoding a codeword can be constant,
or it can vary depending on the alphabet element it encodes.
a variable codeword length is said to be 
.I "adaptive" .
In order to achieve compactness,
it makes sense to encode more frequent alphabet element using shorter codewords.
.SH
Huffman Encoding
.PP
Huffman encoding is very popular type of encoding.
It uses the probability distruibution of the data in order to come up with an encoding that has the minimum
.I "average codeword lengths" . 
Huffman encoding is imployed in some algorithms for encoding images.
.[
huffman
.]
.NH 2
.XN "Image Compression"
.PP
Image compression is important in a lot of practical applications.
When dealing with images,
it's important to have optimal encoding for storage and sharing.
Images often contain 
.I "coherent data" .
Thus, they contains lots of redundancy that can be minimized.
.PP
There are 2 broad categories of data compression
.IP *
Lossless compression

This type of compression encodes all of the input data,
in such a way that all the data can be reconstructed.
This type of compression is used when the preservation of all of the data is essential.
In images,
lossless compression is used in the case where preservation of the original quality is essential.
.IP *
Lossy compression.

This type of compression encodes the input data in such a way that,
some of the original data is lost,
when decompressing a lossy compressed data,
the output is a good enough approximation of the original data.
This type of compression is widely used when sharing images across the internet.
Althoough lossy compression results in reduction of the quality of the image.
this loss is ususally negligable.
.NH 2
.XN "Examples of Image Compression"
.NH 3
.XN "PNG"
.PP
PNG is a lossless image compression scheme.
It is used in situations where image quality is top priority.
PNG uses a compression algorithm called LZW
.[
lzw
.]
which uses the idea of 
.I "back-referencing"
in order to compressed data.
LZW uses earlier segments of data in order to encode these segments when they occur again.
PNG is lossless,
meaning that no loss of image quality takes place.
PNG can be slightly less effective at compressing images.
.NH 3
.XN "JPEG"
.PP
JPEG is a very popular image format.
It's used extensivly in the internet,
and it greatly fasilitated sharing images on the internet.
JPEG uses a lossy compression algorithms.
JPEG uses 2 important facts about how the human eyes precive color in order to be effecitive
.IP 1
The human eye is insenstive to high freqencies (i.e. rapid variation or color)
.IP 2
The human eye is more senstive to brightness than to hue
.PP
With these 2 facts at hand,
JPEG reduces the amount of color information in the image,
through conversion to $Y {C sub b} {C sub r}$ color system and chroma subsampling.
Then, it applies the Discrete Cosine Transform in order to lossy compress color and brightness information.
Color is compressed more than brightness,
beacause, as mentioned earlier, the human eye is less sensitive to variations of color
.IP 2
The human eye is more senstive to brightness than to hue
.PP
With these 2 facts at hand,
JPEG reduces the amount of color information in the image,
through conversion to $Y {C sub b} {C sub r}$ color system and chroma subsampling.
Then, it applies the Discrete Cosine Transform in order to lossy compress color and brightness information.
Color is compressed more than brightness,
beacause, as mentioned earlier, the human eye is less sensitive to variations of color.
Lastly, JPEG uses a modified version of Huffman encoding in order to losslessly compressed the image.
JPEG causes a loss in image quality, 
however, in most practical application,
such loss is negligable.
If image quality must be preserved exactly with no loss,
PNG should be used.
